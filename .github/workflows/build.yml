# Builds and runs tests in all three supported OSes
# Pushes CI feed if secrets.SLEET_CONNECTION is provided

name: build
on: 
  push:
    branches: [ main, dev, 'feature/*', 'rel/*' ]
  pull_request:
    types: [opened, synchronize, reopened]

env:
  DOTNET_NOLOGO: true

jobs:
  dotnet-format:
    runs-on: ubuntu-latest
    steps:
      - name: 🤘 checkout
        uses: actions/checkout@v2
      - name: ✓ ensure format
        run: |
          dotnet tool update -g --version 5.0.* dotnet-format
          dotnet format -f src --check -v:diag

  build:
    needs: dotnet-format
    runs-on: windows-latest
    steps:
      - name: 🤘 checkout
        uses: actions/checkout@v2
        with: 
          submodules: recursive
          fetch-depth: 0

      - name: 🔍 msbuild
        uses: microsoft/setup-msbuild@v1
        with:
          vs-version: '[16.8,)'

      - name: 🙏 build
        run: msbuild -r -m:1 -bl:build.binlog -p:VersionLabel="$($env:GITHUB_REF).$($env:GITHUB_RUN_NUMBER)" -p:RepositoryBranch=${GITHUB_REF#refs/*/}

      - name: 🧪 test
        run: |
          dotnet restore src\NuGetizer.Tests\Scenarios\given_a_packaging_project\a.nuproj
          msbuild -t:test

      - name: 📦 pack
        run: dotnet pack -m:1 --no-build -bl:pack.binlog -p:VersionLabel="$($env:GITHUB_REF).$($env:GITHUB_RUN_NUMBER)" -p:RepositoryBranch=${GITHUB_REF#refs/*/}

      - name: 🔼 logs
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: logs
          path: |
            **/*.binlog
            logs/**/*.*
      
      # Only push CI package to sleet feed if building on ubuntu (fastest)
      - name: 🚀 sleet
        env:
          SLEET_CONNECTION: ${{ secrets.SLEET_CONNECTION }}
        if: env.SLEET_CONNECTION != ''
        run: |
          dotnet tool install -g --version 4.0.18 sleet 
          sleet push bin --config none -f --verbose -p "SLEET_FEED_CONTAINER=nuget" -p "SLEET_FEED_CONNECTIONSTRING=${{ secrets.SLEET_CONNECTION }}" -p "SLEET_FEED_TYPE=azure"
