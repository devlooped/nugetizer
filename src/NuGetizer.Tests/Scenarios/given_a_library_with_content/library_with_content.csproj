<Project Sdk="Microsoft.NET.Sdk">
  <Import Project="$([MSBuild]::GetPathOfFileAbove(Scenario.props, $(MSBuildThisFileDirectory)))" />
  <PropertyGroup>
		<AssemblyName>library</AssemblyName>
		<TargetFramework>MonoAndroid51</TargetFramework>
    <PackageId>MyLibrary</PackageId>
    <DisableStandardFrameworkResolution>true</DisableStandardFrameworkResolution>
  </PropertyGroup>
	<ItemGroup>
    <PackageFile Include="..\given_a_custom_build_project\Readme.txt" Link="docs\Readme.txt" />
    <Content Include="quickstart\cs-any.txt">
      <CodeLanguage>cs</CodeLanguage>
      <TargetFramework>any</TargetFramework>
    </Content>
    <Content Include="quickstart\fs-tfm.txt">
      <CodeLanguage>fs</CodeLanguage>
    </Content>
    <Content Include="quickstart\any-any.txt">
      <TargetFramework>any</TargetFramework>
      <TargetFramework>any</TargetFramework>
    </Content>
    <Content Include="quickstart\any-non-tfm.txt" FrameworkSpecific="false" />
    <Content Include="Resources\**\*.*" />
		<None Include="contentFiles\cs\monoandroid\none.cs" Pack="true" />
    <Content Include="contentFiles\cs\monoandroid\content.cs" Condition="'$(IncludeContentWithReservedRelativeDir)' == 'true'" />
    <Content Include="cs\any\any-content.cs" />
    <None Include="none.txt" />
    <None Include="none-with-kind.txt" PackFolder="build" />
    <None Include="none-with-include-true.txt" Pack="true" />
		<None Include="none-with-include-false.txt" Pack="false" />
    <None Include="none-copy.txt" CopyToOutputDirectory="PreserveNewest" />
    <None Include="none-copy-with-kind.txt" PackFolder="build" CopyToOutputDirectory="PreserveNewest" />
    <None Include="none-copy-with-include-true.txt" Pack="true" CopyToOutputDirectory="PreserveNewest" />
    <None Include="none-copy-with-include-false.txt" Pack="false" CopyToOutputDirectory="PreserveNewest" />
    <Content Include="relative\none-copy-with-kind.txt" PackFolder="build" CopyToOutputDirectory="PreserveNewest" />
    <Content Include="relative\none-copy.txt" CopyToOutputDirectory="PreserveNewest" />
    <Content Include="content.txt" />
    <Content Include="content-with-kind.txt" PackFolder="build" />
    <Content Include="content-with-include-true.txt" Pack="true" />
    <Content Include="content-with-include-false.txt" Pack="false" />
    <Content Include="content-copy.txt" CopyToOutputDirectory="PreserveNewest" />
    <Content Include="content-copy-with-kind.txt" PackFolder="build" CopyToOutputDirectory="PreserveNewest" />
    <Content Include="content-copy-with-include-true.txt" Pack="true" CopyToOutputDirectory="PreserveNewest" />
    <Content Include="content-copy-with-include-false.txt" Pack="false" CopyToOutputDirectory="PreserveNewest" />
    <Content Include="relative\content-copy-with-kind.txt" PackFolder="build" CopyToOutputDirectory="PreserveNewest" />
    <Content Include="relative\content-copy.txt" CopyToOutputDirectory="PreserveNewest" />
    <None Include="none-with-packagepath.txt" PackagePath="build\%(Filename)%(Extension)" />
    <Content Include="content-with-packagepath.txt" PackagePath="build\%(Filename)%(Extension)" />
    <Content Include="content-with-targetpath.txt" Pack="true" TargetPath="relative\docs\%(Filename)%(Extension)" />
    <None Include="non-existent-file.txt" Pack="true" />
  </ItemGroup>
	<Target Name="RemoveContent" Condition="'$(RemoveContent)' == 'true'" BeforeTargets="GetPackageContents">
		<ItemGroup>
			<PackageFile Remove="@(PackageFile)" Condition="'%(PackFolder)' == 'content' Or '%(PackFolder)' == 'none'" />
    </ItemGroup>
  </Target>
</Project>