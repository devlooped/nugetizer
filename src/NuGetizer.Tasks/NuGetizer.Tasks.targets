<Project>

  <ItemGroup>
    <ProjectProperty Include="PackageId" />
  </ItemGroup>

  <ItemDefinitionGroup>
    <Content>
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
      <Pack>true</Pack>
    </Content>
  </ItemDefinitionGroup>

  <PropertyGroup>
    <MSBuildAllProjects>$(MSBuildAllProjects);$(MSBuildThisFileFullPath)</MSBuildAllProjects>

    <PackageId>NuGetizer</PackageId>
    <Title>NuGetizer</Title>
    <Description>Simple, flexible and powerful NuGet packaging</Description>

    <IsDevelopmentDependency>true</IsDevelopmentDependency>
    <BuildOutputKind>build</BuildOutputKind>

    <PackOnBuild Condition="'$(PackOnBuild)' == '' And '$(Configuration)' == 'Release'">true</PackOnBuild>
    <PackageOutputPath Condition="'$(PackageOutputPath)' == ''">..\..\bin</PackageOutputPath>
  </PropertyGroup>

  <Target Name="CleanContents" BeforeTargets="GetPackageContents" DependsOnTargets="InferPackageContents" Returns="@(PackageFile)">
    <ItemGroup>
      <PackageFile Remove="@(PackageFile)" Condition="$([System.String]::new('%(PackageFile.NuGetPackageId)').StartsWith('Microsoft.Build'))" />
    </ItemGroup>
  </Target>

  <Target Name="UpdatePackagingVersion" BeforeTargets="Pack">
    <!-- Update packaging version targets -->
    <PropertyGroup>
      <XmlNs>&lt;Namespace Prefix='msb' Uri='http://schemas.microsoft.com/developer/msbuild/2003'/&gt;</XmlNs>
    </PropertyGroup>
    <XmlPoke Namespaces="$(XmlNs)"
				 XmlInputPath="$(OutputPath)NuGetizer.Version.props"
				 Query="/msb:Project/msb:PropertyGroup/msb:PackVersion"
				 Value="$(Version)"/>
  </Target>

  <PropertyGroup>
    <CoreCompileDependsOn>
      IncludePackFolderKind;
      $(CoreCompileDependsOn);
    </CoreCompileDependsOn>
  </PropertyGroup>

  <Target Name="IncludePackFolderKind" BeforeTargets="BuildOnlySettings" DependsOnTargets="GeneratePackFolderKind">
    <ItemGroup>
      <Compile Include="$(PackFolderKindFile)" />
    </ItemGroup>
  </Target>

  <Target Name="GeneratePackFolderKind" Inputs="$(MSBuildThisFileFullPath);NuGetizer.props" Outputs="$(PackFolderKindFile)">
    <MakeDir Directories="$(IntermediateOutputPath)" Condition=" !Exists('$(IntermediateOutputPath)') " />
    <MSBuild Projects="NuGetizer.props" Targets="_GetPackFolders">
      <Output ItemName="_PackFolderKind" TaskParameter="TargetOutputs" />
    </MSBuild>

    <WriteLinesToFile Lines='
namespace $(RootNamespace)
{
	/// &lt;summary&gt;Known PackFolder metadata values for PackageFile and _PackageContent items&lt;/summary&gt;
	public static partial class PackFolderKind
	{
' Overwrite='true' File='$(PackFolderKindFile)' />

    <WriteLinesToFile Lines='
		/// &lt;summary&gt;PackageFolder: $([MSBuild]::ValueOrDefault(%(PackageFolder), %(Identity)))&lt;/summary&gt;
		public const string %(_PackFolderKind.Identity) = "$([MSBuild]::ValueOrDefault(%(PackageFolder), %(Identity)))"%3B
' Overwrite='false' File='$(PackFolderKindFile)' />

    <WriteLinesToFile Lines='
	}
}
' Overwrite='false' File='$(PackFolderKindFile)' />

    <ItemGroup>
      <FileWrites Include="$(PackFolderKindFile)" />
    </ItemGroup>
  </Target>

</Project>
