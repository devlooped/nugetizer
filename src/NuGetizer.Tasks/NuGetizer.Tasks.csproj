<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <TargetFramework>netstandard2.0</TargetFramework>
    <CopyLocalLockFileAssemblies>true</CopyLocalLockFileAssemblies>
    <RootNamespace>NuGetizer</RootNamespace>
    <AppendTargetFrameworkToOutputPath>false</AppendTargetFrameworkToOutputPath>

    <Description>
      NuGetizer is a drop-in replacement for the .NET SDK built-in Pack (a.k.a. "SDK Pack"), 
      fully extensible via consistent and easy to understand MSBuild properties and items, 
      designed and centered around best practices in MSBuild design and extensibility.

      Yes, this means you'll never need to write a .nuspec by hand ever again, no matter 
      how complicated or advanced your packing scenarios are.
    </Description>
    <PackageTags>dotnet tool nuget pack packaging</PackageTags>
    <DevelopmentDependency>true</DevelopmentDependency>
    <PackageRequireLicenseAcceptance>true</PackageRequireLicenseAcceptance>
    <PackageLicenseFile>OSMFEULA.txt</PackageLicenseFile>

    <ILRepack>true</ILRepack>
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="Microsoft.Build.Tasks.Core" Version="16.11.6" PrivateAssets="all" />
    <PackageReference Include="NuGet.Packaging" Version="6.14.0" PrivateAssets="all" />
    <PackageReference Include="PolySharp" Version="1.15.0" PrivateAssets="all" />
    <PackageReference Include="ThisAssembly.Project" Version="2.1.2" PrivateAssets="all" />
    <PackageReference Include="ThisAssembly.Strings" Version="2.1.2" PrivateAssets="all" />
    <PackageReference Include="Minimatch" Version="2.0.0" PrivateAssets="all" />
    <PackageReference Include="Markdig" Version="0.42.0" PrivateAssets="all" />
    <PackageReference Include="System.Runtime.CompilerServices.Unsafe" Version="6.1.2" PrivateAssets="all" />
  </ItemGroup>

  <ItemGroup>
    <ProjectCapability Include="Pack" />
    <ILRepackInclude Include="Markdig" />
    <ILRepackInclude Include="System.Buffers" />
    <ILRepackInclude Include="System.Memory" />
    <ILRepackInclude Include="System.Numerics.Vectors" />
    <ILRepackInclude Include="System.Runtime.CompilerServices.Unsafe" />
    <ILRepackInclude Include="Microsoft.NET.StringTools" />
  </ItemGroup>

  <ItemGroup>
    <None Update="@(None)" CopyToOutputDirectory="PreserveNewest" Pack="true" />
    <None Update="NuGetizer.MultiTargeting.props" PackagePath="buildMultiTargeting\NuGetizer.props" />
    <None Update="NuGetizer.MultiTargeting.targets" PackagePath="buildMultiTargeting\NuGetizer.targets" />
    <None Include="NuGetizer.PackageMetadata.targets;dotnet-nugetize.props;dotnet-nugetize.targets" PackagePath="buildMultiTargeting\%(Filename)%(Extension)" Pack="true" />
    <None Update="NuGetizer.Tasks.targets" Pack="false" />
    <None Include="..\..\osmfeula.txt" Link="osmfeula.txt" PackagePath="OSMFEULA.txt" />
  </ItemGroup>

  <ItemGroup>
    <ProjectReference Include="..\CodeAnalysis\CodeAnalysis.csproj" ReferenceOutputAssembly="false" />
  </ItemGroup>

  <ItemGroup>
    <EmbeddedResource Update="Resources.resx" Generator="" />
  </ItemGroup>
  
  <Import Project="NuGetizer.Tasks.Pack.targets" Condition="'$(GeneratePackageOnBuild)' == 'false' AND '$(NuGetize)' != 'true'" />
  <Import Project="NuGetizer.Tasks.targets" />
  <Import Project="..\ILRepack.targets" />
</Project>